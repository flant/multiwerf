name: Run tests
on:
  pull_request:
    branches:
      - master
env:
  GO111MODULE: on

jobs:

  tests:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        shell: [sh, bash, cmd, powershell]
        exclude:
        - os: ubuntu-latest
          shell: cmd
        - os: ubuntu-latest
          shell: powershell
        - os: macOS-latest
          shell: cmd
        - os: macOS-latest
          shell: powershell
        - os: windows-latest
          shell: sh

    runs-on: ${{ matrix.os }}
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Checkout code
      uses: actions/checkout@v1

    - name: Test
      run: |
        export MULTIWERF_INTEGRATION_USE_SHELL=${{ matrix.shell }}
        go test ./...

        . $(multiwerf use 1.0 stable --shell default --as-file)
        werf
      shell: sh
      if: matrix.shell == 'sh'

    - name: Test
      run: |
        export MULTIWERF_INTEGRATION_USE_SHELL=${{ matrix.shell }}
        go test ./...

        . $(multiwerf use 1.0 stable --shell default --as-file)
        werf
      shell: bash
      if: matrix.shell == 'bash'

    - name: Test
      run: |
        # go test ./...

        FOR /F "tokens=*" %g IN ('multiwerf use 1.0 stable --as-file --shell cmdexe') do (SET WERF_USE_SCRIPT_PATH=%g)
        %WERF_USE_SCRIPT_PATH%
        werf
      shell: cmd
      if: matrix.shell == 'cmd'

    - name: Test
      run: |
        # go test ./...

        Invoke-Expression -Command "multiwerf use 1.0 stable --as-file --shell powershell" | Out-String -OutVariable WERF_USE_SCRIPT_PATH
        . $WERF_USE_SCRIPT_PATH.Trim()
        werf
      shell: powershell
      if: matrix.shell == 'powershell'
